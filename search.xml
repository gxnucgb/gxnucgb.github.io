<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Mysql查询数据</title>
      <link href="/2019/07/26/Mysql%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/"/>
      <url>/2019/07/26/Mysql%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<p>  <strong>【实例】</strong><br>  获取要用元组的下标索引，与插入不同的是要处理结果集</p><pre><code class="bash">import pymysql<span class="comment"># 创建连接</span>con = pymysql.connect(host=<span class="string">'localhost'</span>, password=<span class="string">'root'</span>, user=<span class="string">'root'</span>, database=<span class="string">'testmysql'</span>, port=3306)<span class="comment"># 创建事务</span>cur = con.cursor()<span class="comment"># 编写查询的sql</span>sql = <span class="string">'select * from student'</span><span class="comment"># 执行sql</span>try:    cur.execute(sql)    <span class="comment"># 处理结果集</span>    stu = cur.fetchone()    <span class="built_in">print</span>(stu)    students = cur.fetchall()    <span class="keyword">for</span> student <span class="keyword">in</span> students:    <span class="comment"># 获取要用下标，索引从0开始</span>        sno = student[0]        sname = student[1]        sex = student[2]        age = student[3]        score = student[4]        <span class="built_in">print</span>(<span class="string">'sno:'</span>, sno, <span class="string">'sname:'</span>, sname, <span class="string">'age:'</span>, age, <span class="string">'sex:'</span>, sex, <span class="string">'age:'</span>, age,  <span class="string">'score:'</span>, score)except Exception as e:    <span class="built_in">print</span>(e)    <span class="built_in">print</span>(<span class="string">'查询失败'</span>)finally:    cur.close()    con.close()</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MySql插入数据</title>
      <link href="/2019/07/26/MySql%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE/"/>
      <url>/2019/07/26/MySql%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<p>  <strong>【实例】</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">import pymysql</span><br><span class="line"><span class="comment"># 创建与数据的连接</span></span><br><span class="line">con = pymysql.connect(host=<span class="string">'localhost'</span>, password=<span class="string">'root'</span>, user=<span class="string">'root'</span>, database=<span class="string">'testmysql'</span>, port=3306)</span><br><span class="line"><span class="comment"># 创建游标对象</span></span><br><span class="line">cur = con.cursor()</span><br><span class="line"><span class="comment"># 写插入数据库的sql</span></span><br><span class="line">sql = <span class="string">'insert into student(sno, sname, sex, age, score) values(%s, %s, %s, %s, %s)'</span>      <span class="comment"># s要小写，不然会报unsupported format character 'S' (0x53) at index 72</span></span><br><span class="line">try:</span><br><span class="line">    <span class="comment"># 执行sql插入一条数据</span></span><br><span class="line">    <span class="comment"># cur.execute(sql, (1100, '张三', '男', 33, 33.3))</span></span><br><span class="line">    <span class="comment"># 插入多条数据</span></span><br><span class="line">    args = [(102, <span class="string">'张2'</span>, <span class="string">'男'</span>, 33, 33.3), (103, <span class="string">'张4'</span>, <span class="string">'男'</span>, 33, 33.3), (104, <span class="string">'张5'</span>, <span class="string">'男'</span>, 33, 33.3)]     <span class="comment"># 插入多条数据要用executemany</span></span><br><span class="line">    cur.executemany(sql, args)</span><br><span class="line">    con.commit()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'插入成功'</span>)</span><br><span class="line">except Exception as e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'插入失败'</span>)</span><br><span class="line">finally:</span><br><span class="line">    con.close()</span><br><span class="line">    cur.close()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MySql创建表</title>
      <link href="/2019/07/26/MySql%E5%88%9B%E5%BB%BA%E8%A1%A8/"/>
      <url>/2019/07/26/MySql%E5%88%9B%E5%BB%BA%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="MySql创建表"><a href="#MySql创建表" class="headerlink" title="MySql创建表"></a>MySql创建表</h2><p>首先要在navicat中连接数据库，创建一个testtmysql的数据库<br>  <strong>【实例】</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">import pymysql</span><br><span class="line">try:</span><br><span class="line">    <span class="comment"># 创建与数据库的连接</span></span><br><span class="line">    db = pymysql.connect(host=<span class="string">'localhost'</span>, user=<span class="string">'root'</span>, password=<span class="string">'root'</span>, database=<span class="string">'testmysql'</span>, port=3306)</span><br><span class="line">    <span class="comment"># 创建游标对象cursor</span></span><br><span class="line">    cursor = db.cursor()</span><br><span class="line">    <span class="comment"># 使用execute()方法执行sql，如果表存在则删除</span></span><br><span class="line">    cursor.execute(<span class="string">'drop table if EXISTS student'</span>)</span><br><span class="line">    <span class="comment"># 创建表的sql</span></span><br><span class="line">    sql = <span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">        create table student(</span></span><br><span class="line"><span class="string">        sno int(8) primary key auto_increment,</span></span><br><span class="line"><span class="string">        sname varchar(30) not null,</span></span><br><span class="line"><span class="string">        sex varchar(5) ,</span></span><br><span class="line"><span class="string">        age int(2),</span></span><br><span class="line"><span class="string">        score float(3,1)</span></span><br><span class="line"><span class="string">        )</span></span><br><span class="line"><span class="string">    '</span><span class="string">''</span></span><br><span class="line">    cursor.execute(sql)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"创建成功"</span>)</span><br><span class="line">except Exception as e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'创建表失败'</span>)</span><br><span class="line">finally:</span><br><span class="line">    <span class="comment"># 关闭数据库连接</span></span><br><span class="line">    db.close()</span><br><span class="line">    cursor.close()</span><br></pre></td></tr></table></figure><p>![]<br>(<a href="https://github.com/gxnucgb/python/blob/master/MYSq%E5%88%9B%E5%BB%BA%E8%A1%A8.png">https://github.com/gxnucgb/python/blob/master/MYSq%E5%88%9B%E5%BB%BA%E8%A1%A8.png</a>)</p>]]></content>
      
      
      
        <tags>
            
            <tag> MySql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqlite3学习</title>
      <link href="/2019/07/25/sqlite3%E5%AD%A6%E4%B9%A0/"/>
      <url>/2019/07/25/sqlite3%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="1，操作流程"><a href="#1，操作流程" class="headerlink" title="1，操作流程"></a>1，操作流程</h2><p>（1）先在文件夹创建出一个.db文件<br>  （2）导入相关库或模块（SQLite3)<br>  （3）使用connect()连接数据库并获取数据库对象。他提供了以下方法：<br>  .cursor() 方法来创建一个游标对象<br>  .commit() 方法来处理事务提交<br>  .rollback() 方法来处理事务回滚<br>  .close() 方法来关闭一个数据库连接<br>  （4）使用con.cursor() 获取游标对象<br>  （5）使用游标对象的方法execute()、executemany()、fetchall() 等来操作数据库，实现数据库插入、修改和删除操作，并查询获取显示相关的记录。在Python程序中，连接函数sqlite3.connert()有如下两个常用的参数：<br>database:表示要访问的数据库名。<br>timeout():表示访问数据的超时设定。<br>  （6）使用close()关闭游标对象和数据库连接。数据库操作完成之后，必须及时调用其close()方法关闭数据库连接，这样做的目的是减轻数据服务器的压力。<br>  （7）他的的不同有sql语句，执行的时候的参数</p><h2 id="2，使用SQLite3创建表"><a href="#2，使用SQLite3创建表" class="headerlink" title="2，使用SQLite3创建表"></a>2，使用SQLite3创建表</h2><p>使用sqlite3模块的connect方法来创建/打开数据库，需要指定数据库路径，不存在则创建一个新的数据库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">con = sqlite3.connect(<span class="string">'e:/sqlitedb/first.db'</span>)   <span class="comment">#路径的那个斜杠要反过来写，文件不存在则创建文件</span></span><br></pre></td></tr></table></figure><p><strong><em>【实例】</em></strong>使用sqlite3创建表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入sqlite3模块</span></span><br><span class="line">import sqlite3</span><br><span class="line"><span class="comment"># 硬盘上创建连接</span></span><br><span class="line">con = sqlite3.connect(<span class="string">'E:/python/tank/sqlite3.db'</span>)</span><br><span class="line"><span class="comment"># 获取cursor(游标)对象</span></span><br><span class="line">cur = con.cursor()</span><br><span class="line">sql = <span class="string">'create table Student (id int(10) primary key, \</span></span><br><span class="line"><span class="string">                                name char(20) not null \</span></span><br><span class="line"><span class="string">                              )'</span></span><br><span class="line">try:</span><br><span class="line">    <span class="comment"># 执行语句</span></span><br><span class="line">    cur.execute(sql)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"创建成功"</span>)</span><br><span class="line">except Exception as e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"创建失败"</span>)</span><br><span class="line">finally:</span><br><span class="line">    <span class="comment"># 关闭游标</span></span><br><span class="line">    cur.close()</span><br><span class="line">    <span class="comment"># 关闭连接</span></span><br><span class="line">    con.close()</span><br></pre></td></tr></table></figure><h2 id="2，使用SQLite3插入数据"><a href="#2，使用SQLite3插入数据" class="headerlink" title="2，使用SQLite3插入数据"></a>2，使用SQLite3插入数据</h2><p>调用游标对象的execute执行插入的sql，使用executemany()执行多条sql语句，使用executmany()比循环使用execu()执行多条sql语句效率高<br><strong><em>【实例】</em></strong>使用sqlite3在表中插入数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入sqlite3模块</span></span><br><span class="line">import sqlite3</span><br><span class="line"><span class="comment"># 在硬盘上创建连接</span></span><br><span class="line">con = sqlite3.connect(<span class="string">'E:/python/tank/sqlite3.db'</span>)</span><br><span class="line"><span class="comment"># 获取cursor对象</span></span><br><span class="line">cur = con.cursor()</span><br><span class="line"><span class="comment"># 执行sql创建表</span></span><br><span class="line">sql = <span class="string">'insert into Student(id, name) values(?, ?)'</span>      <span class="comment"># 问号是用来占位的</span></span><br><span class="line">try:</span><br><span class="line">    cur.execute(sql, (112, <span class="string">'小潘'</span>))       <span class="comment"># 用元组来写数据</span></span><br><span class="line">    <span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">    插入多条数据</span></span><br><span class="line"><span class="string">    cur.executemany(sql, [(100, "小陈"), (101, "小李")])    #执行多条插入的时候，要用列表＋元组来存，插入重复数据会报错</span></span><br><span class="line"><span class="string">    '</span><span class="string">''</span></span><br><span class="line">    <span class="comment"># 提交事务</span></span><br><span class="line">    con.commit()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'插入成功'</span>)</span><br><span class="line">except Exception as e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"插入失败"</span>)</span><br><span class="line">    con.rollback()</span><br><span class="line">finally:</span><br><span class="line">    <span class="comment"># 关闭游标</span></span><br><span class="line">    cur.close()</span><br><span class="line">    <span class="comment"># 关闭连接</span></span><br><span class="line">    con.close()</span><br></pre></td></tr></table></figure><h2 id="2，使用SQLite3查询数据"><a href="#2，使用SQLite3查询数据" class="headerlink" title="2，使用SQLite3查询数据"></a>2，使用SQLite3查询数据</h2><p><strong><em>【实例】</em></strong>使用sqlite3查询表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入sqlite3模块</span></span><br><span class="line">import sqlite3</span><br><span class="line"><span class="comment"># 硬盘上创建连接</span></span><br><span class="line">con = sqlite3.connect(<span class="string">'E:/python/tank/sqlite3.db'</span>)</span><br><span class="line"><span class="comment"># 获取cursor对象</span></span><br><span class="line">cur = con.cursor()</span><br><span class="line">sql = <span class="string">'select * from Student'</span></span><br><span class="line">try:</span><br><span class="line">    cur.execute(sql)</span><br><span class="line">    <span class="comment"># 与插入不同的是要获取结果集</span></span><br><span class="line">    <span class="comment"># 获取一条结果</span></span><br><span class="line">    stu1 = cur.fetchone()</span><br><span class="line">    <span class="built_in">print</span>(stu1)</span><br><span class="line">    stu_all = cur.fetchall()</span><br><span class="line">    <span class="comment"># print(stu_all)</span></span><br><span class="line">    <span class="keyword">for</span> stu <span class="keyword">in</span> stu_all:</span><br><span class="line">        <span class="built_in">print</span>(stu)</span><br><span class="line">except Exception as e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'查询所有数据失败'</span>)</span><br><span class="line">finally:</span><br><span class="line">    <span class="comment"># 关闭游标</span></span><br><span class="line">    cur.close()</span><br><span class="line">    <span class="comment"># 关闭连接</span></span><br><span class="line">    con.close()</span><br></pre></td></tr></table></figure><h2 id="3，使用SQLite3修改数据"><a href="#3，使用SQLite3修改数据" class="headerlink" title="3，使用SQLite3修改数据"></a>3，使用SQLite3修改数据</h2><p><strong><em>【实例】</em></strong>使用sqlite3修改表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入sqlite3模块</span></span><br><span class="line">import sqlite3</span><br><span class="line"><span class="comment"># 硬盘上创建连接</span></span><br><span class="line">con = sqlite3.connect(<span class="string">'E:/python/tank/sqlite3.db'</span>)</span><br><span class="line"><span class="comment"># 获取cursor对象</span></span><br><span class="line">cur = con.cursor()</span><br><span class="line"><span class="comment"># 写修改语句</span></span><br><span class="line">sql = <span class="string">'update Student set name=? where id = ?'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行sql</span></span><br><span class="line">try:</span><br><span class="line">     <span class="comment"># 执行修改</span></span><br><span class="line">     cur.execute(sql, (<span class="string">"hahah"</span>, 112))</span><br><span class="line">     <span class="comment"># 提交事务</span></span><br><span class="line">     con.commit()</span><br><span class="line">except Exception as e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"修改失败"</span>)</span><br><span class="line">    con.rollback()</span><br><span class="line">finally:</span><br><span class="line">    <span class="comment"># 关闭游标</span></span><br><span class="line">    cur.close()</span><br><span class="line">    <span class="comment"># 关闭连接</span></span><br><span class="line">    con.close()</span><br></pre></td></tr></table></figure><h2 id="3，使用SQLite3删除数据"><a href="#3，使用SQLite3删除数据" class="headerlink" title="3，使用SQLite3删除数据"></a>3，使用SQLite3删除数据</h2><p><strong><em>【实例】</em></strong>使用sqlite3删除表中数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入sqlite3模块</span></span><br><span class="line">import sqlite3</span><br><span class="line"><span class="comment"># 硬盘上创建连接</span></span><br><span class="line">con = sqlite3.connect(<span class="string">'E:/python/tank/sqlite3.db'</span>)</span><br><span class="line"><span class="comment"># 获取cursor对象</span></span><br><span class="line">cur = con.cursor()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写删除语句</span></span><br><span class="line">sqldel = <span class="string">'delete from Student where id =?'</span></span><br><span class="line"><span class="comment"># 执行sql</span></span><br><span class="line">try:</span><br><span class="line">    <span class="comment"># 执行删除</span></span><br><span class="line">    cur.execute(sqldel, (112,))       <span class="comment"># 必须是元组类型，所以（112, )逗号不能少</span></span><br><span class="line">    con.commit()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'删除成功'</span>)</span><br><span class="line">except Exception as e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"修改失败"</span>)</span><br><span class="line">    con.rollback()</span><br><span class="line">finally:</span><br><span class="line">    <span class="comment"># 关闭游标</span></span><br><span class="line">    cur.close()</span><br><span class="line">    <span class="comment"># 关闭连接</span></span><br><span class="line">    con.close()</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在上面的实例中，首先定义查询在上述实例代码中，首先定义查询所有数据、插入数据、修改数据、删除数据的方法。然后，定义主方法中依次建立连接，获取连接的cursor，通过cursor的execute()等方法来执行SQL语句，调用插入记录、更加记录、删除记录的方法。<br>  特别注意：execute参数中的是sql语句和元组！！</p>]]></content>
      
      
      
        <tags>
            
            <tag> sqlite3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/07/24/hello-world/"/>
      <url>/2019/07/24/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>坦克项目小学习1</title>
      <link href="/2019/07/24/%E5%9D%A6%E5%85%8B%E9%A1%B9%E7%9B%AE%E5%B0%8F%E5%AD%A6%E4%B9%A01/"/>
      <url>/2019/07/24/%E5%9D%A6%E5%85%8B%E9%A1%B9%E7%9B%AE%E5%B0%8F%E5%AD%A6%E4%B9%A01/</url>
      
        <content type="html"><![CDATA[<h4 id="坦克小项目学习"><a href="#坦克小项目学习" class="headerlink" title="坦克小项目学习"></a>坦克小项目学习</h4><h5 id="1，分析。"><a href="#1，分析。" class="headerlink" title="1，分析。"></a>1，分析。</h5><p>在写一个项目代码之前，应该要对项目进行分析，分析他可以分为多少个模块，进而得到他应该有多少个类，分析出他的主类是什么。  </p><h5 id="2，再分析。"><a href="#2，再分析。" class="headerlink" title="2，再分析。"></a>2，再分析。</h5><p>  在得到有多少个类之后，对类进行分析，分析他具有什么方法，具有什么属性（相似的类可以使用继承。  </p><h5 id="3，建框架。"><a href="#3，建框架。" class="headerlink" title="3，建框架。"></a>3，建框架。</h5><p>在pycharm创建的项目中，先写出这些类还有方法，构建出一个项目框架。  </p><h5 id="4，写主窗口。"><a href="#4，写主窗口。" class="headerlink" title="4，写主窗口。"></a>4，写主窗口。</h5><p>写出显示主窗口，可到官网<a href="http://www.pygame.org学习查看文档。" target="_blank" rel="noopener">www.pygame.org学习查看文档。</a>   </p><h6 id="1，导入pygame"><a href="#1，导入pygame" class="headerlink" title="1，导入pygame"></a>1，导入pygame</h6><h6 id="2，显示一个窗口先要调用init方法初始化一个窗口"><a href="#2，显示一个窗口先要调用init方法初始化一个窗口" class="headerlink" title="2，显示一个窗口先要调用init方法初始化一个窗口"></a>2，显示一个窗口先要调用init方法初始化一个窗口</h6><p>  set_mode(resolution = (0, 0), flags = 0, depth = 0)   -&gt;suface，创建一个显示surface，传入的参数是resolution参数是一对表示宽度和高度的数字用（元组），flags参数是其他选项的集合，depth表示用于颜色的位数。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Thanks</title>
      <link href="/2019/07/24/Thanks/"/>
      <url>/2019/07/24/Thanks/</url>
      
        <content type="html"><![CDATA[<h1 id="Thanks"><a href="#Thanks" class="headerlink" title="Thanks"></a>Thanks</h1><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h2 id="测试测试！！！"><a href="#测试测试！！！" class="headerlink" title="测试测试！！！"></a>测试测试！！！</h2>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
